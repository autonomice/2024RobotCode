diff --git a/TeamCode/src/main/java/github/autonomice/Constants.java b/TeamCode/src/main/java/github/autonomice/Constants.java
index 66e905d..8c8de8c 100644
--- a/TeamCode/src/main/java/github/autonomice/Constants.java
+++ b/TeamCode/src/main/java/github/autonomice/Constants.java
@@ -24,4 +24,7 @@ public class Constants {
         IntakeOut = GamepadKeys.Trigger.LEFT_TRIGGER;
 
     public static String ArmKey = "arm";
+    public static int ArmUpPos = 90, ArmDownPos = 0;
+    public static GamepadKeys.Button ArmUpButton = GamepadKeys.Button.Y,
+        ArmDownButton = GamepadKeys.Button.A;
 }
diff --git a/TeamCode/src/main/java/github/autonomice/Robot.java b/TeamCode/src/main/java/github/autonomice/Robot.java
index 9ef72c3..ede88f5 100644
--- a/TeamCode/src/main/java/github/autonomice/Robot.java
+++ b/TeamCode/src/main/java/github/autonomice/Robot.java
@@ -63,6 +63,16 @@ public class Robot extends com.arcrobotics.ftclib.command.Robot {
                 new AprilTagDetector.DefaultCommand(this.mDetector, telemetry)
         );
 
+        props
+                .gamepad1
+                .getGamepadButton(Constants.ArmUpButton)
+                .whenReleased(new InstantCommand(mArm::runUp, mArm));
+
+        props
+                .gamepad1
+                .getGamepadButton(Constants.ArmDownButton)
+                .whenReleased(new InstantCommand(mArm::runDown, mArm));
+
         props
                 .gamepad1
                 .getGamepadButton(Constants.IMUPoseResetButton)
diff --git a/TeamCode/src/main/java/github/autonomice/subsystems/Arm.java b/TeamCode/src/main/java/github/autonomice/subsystems/Arm.java
index 96a434e..5fc7534 100644
--- a/TeamCode/src/main/java/github/autonomice/subsystems/Arm.java
+++ b/TeamCode/src/main/java/github/autonomice/subsystems/Arm.java
@@ -10,12 +10,22 @@ import github.autonomice.Constants;
 
 public class Arm extends SubsystemBase {
     public final DcMotor mMotor;
+    public float currentPos = 0;
 
     public Arm(HardwareMap hwMap) {
         this.mMotor = hwMap.get(DcMotor.class, Constants.ArmKey);
+        this.mMotor.setTargetPosition(0);
         this.mMotor.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);
-        this.mMotor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
-        this.mMotor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
+        this.mMotor.setPower(0.5);
+        this.mMotor.setMode(DcMotor.RunMode.RUN_TO_POSITION);
+    }
+
+    public void runUp() {
+        this.currentPos = Constants.ArmUpPos;
+    }
+
+    public void runDown() {
+        this.currentPos = Constants.ArmDownPos;
     }
 
     public static class DefaultCommand extends CommandBase {
@@ -31,7 +41,8 @@ public class Arm extends SubsystemBase {
 
         @Override
         public void execute() {
-            this.mArm.mMotor.setPower(this.mGamepad.getRightY());
+            this.mArm.currentPos += (float) this.mGamepad.getRightY();
+            this.mArm.mMotor.setTargetPosition((int) this.mArm.currentPos);
         }
     }
 }
